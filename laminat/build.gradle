apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.janphkre'

android {
    compileSdkVersion rootProject.ext.target_sdk_version
    defaultConfig {
        minSdkVersion rootProject.ext.min_sdk_version
        targetSdkVersion rootProject.ext.target_sdk_version
        versionCode rootProject.ext.pact_version_code
        versionName rootProject.ext.pact_version
    }
    buildTypes {
        debug {
            debuggable true
        }
        release {
            minifyEnabled false
        }
    }


}

repositories {
    mavenCentral()
}

dependencies {
//TODO: CHECKOUT if we can replace api with implementation & remove some dependencies?
    api "com.squareup.okhttp3:mockwebserver:$mockserver_version"
    api "org.apache.commons:commons-collections4:$apache_collections_version"
    api "io.gatling:jsonpath_2.11:$jsonpath_version"

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "com.google.code.gson:gson:$gson_version"
    api "org.apache.commons:commons-lang3:$apache_commons_version"
    api "joda-time:joda-time:$jodatime_version"
    api "com.github.mifmif:generex:$generex_version"
    api "com.github.zafarkhaja:java-semver:$semver_version"

    testImplementation "junit:junit:$test_junit_version"
    testImplementation "org.json:json:$test_json_version"
    testImplementation "org.mockito:mockito-core:$test_mockito_version"

    // The Android vm does not like the library "org.apache.httpcomponents:httpcore:4.4.4"
    // because it already contains parts from it that are final for example but a super class in the lib.
    // The required java classes are added manually into org.apache.http...
}